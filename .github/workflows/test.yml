# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - master
#   pull_request:
#     branches:
#       - master

#   stages:
#   - build
#   - test
#   - deploy
#   - .post

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Set up Node.js
#       uses: actions/setup-node@v2
#       with:
#         node-version: '20'

#     - name: Install dependencies
#       run: npm install

#     - name: Build project
#       run: npm run build

#     - name: Run tests
#       run: npm test

#     - name: Deployment

    

      
name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run

  test:
    runs-on: ubuntu-latest
    needs: build  # Ensures this job only runs if the build job succeeds
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Ensures this job only runs if the test job succeeds
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Deploy application
        run: echo "Deploying application..."

  # notify:
  #   runs-on: ubuntu-latest
  #   needs: deploy  # Ensures this job only runs if the deploy job succeeds
  #   steps:
  #     - name: Notify via Telegram
  #       run: |
  #         curl -X POST https://api.telegram.org/bot<Your_Telegram_Bot_Token>/sendMessage \
  #         -d chat_id=<Your_Chat_ID> \
  #         -d text="Deployment completed successfully!"
